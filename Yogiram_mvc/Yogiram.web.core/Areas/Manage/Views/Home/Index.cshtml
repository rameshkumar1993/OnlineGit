@model HomeRegisterModels

@{
    ViewBag.Title = "Register Form";
}

<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">

                    <div class="card-header card-header-icon col-lg-11" data-background-color="purple">
                        <span style="font-size:1.3em" class="card-title">Register Details</span>

                    </div>
                    <div class="card-content">
                        <div class="toolbar text-left">
                            <button type="button" class="btn btn-rose btn-fill" style="padding-left: 20px;padding-right: 20px;" data-toggle="modal" data-target="#myModal">ADD</button>
                            <!--        Here you can write extra buttons/actions for the toolbar              -->
                        </div>
                        <div class="material-datatables">
                            <table id="datatables" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Date of Birth</th>
                                        <th>Mobile</th>
                                        <th class="disabled-sorting text-center">Actions</th>
                                    </tr>
                                </thead>
                                @*
                                    <tfoot>
                                        <tr>
                                            <th>Name</th>
                                            <th>Position</th>
                                            <th>Office</th>
                                            <th>Age</th>
                                            <th>Start date</th>
                                            <th class="text-right">Actions</th>
                                        </tr>
                                    </tfoot>*@
                            </table>
                        </div>
                    </div>
                    <!-- end content-->
                </div>
                <!--  end card  -->
            </div>
            <!-- end col-md-12 -->
        </div>
        <!-- end row -->
    </div>
</div>

@using (Html.BeginForm("RegistersForm", "Register", FormMethod.Post, new { role = "form", id = "RegisterValidation" }))
{
    
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-md-10">

                <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                    <i class="material-icons">clear</i>
                                </button>

                                <h4 class="modal-title">Register Forms</h4>
                            </div>
                            <div class="modal-body">
                                @Html.HiddenFor(model => model.RegId)
                                <div class="card-content">
                                    <div class="form-group label-floating">
                                        @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group label-floating">
                                        @Html.LabelFor(model => model.Email, new { @class = "control-label" })
                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = "email" })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group label-floating ">
                                        @Html.LabelFor(model => model.DOB, "Date of Birth", new { @class = "label-control" })
                                        @Html.TextBoxFor(model => model.DOB, new { @class = "form-control datetimepicker" })
                                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group label-floating">
                                        @Html.LabelFor(model => model.MobileNo, "Mobile Number", new { @class = "control-label" })
                                        @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group label-floating">
                                        @Html.LabelFor(model => model.Password, new { @class = "control-label" })
                                        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group label-floating">
                                        @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label" })
                                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="category form-category">
                                        <small>*</small> Required fields
                                    </div>

                                    <div class="form-footer text-right">
                                        <div class="checkbox pull-left">
                                            <label>
                                                <input type="checkbox" name="optionsCheckboxes"> Subscribe to newsletter
                                            </label>
                                        </div>
                                        <input type="submit" class="btn btn-rose btn-fill" value="Save" />
                                    </div>
                                </div>

                            </div>
                            @*<div class="modal-footer">
                                    <button type="button" class="btn btn-simple">Nice Button</button>
                                    <button type="button" class="btn btn-danger btn-simple" data-dismiss="modal">Close</button>
                                </div>*@
                        </div>
                    </div>
                </div>

            </div>
            <div class="col-md-1"></div>
        </div>
        
        }


        <!--   Core JS Files   -->

        <script src="~/Theme/assets/js/jquery-3.2.1.js"></script>
        <script src="~/Scripts/jquery-1.10.2.js"></script>

        <script src="~/Theme/assets/js/bootstrap.min.js" type="text/javascript"></script>
        <script src="~/Theme/assets/js/material.min.js" type="text/javascript"></script>
        <script src="~/Theme/assets/js/perfect-scrollbar.jquery.min.js" type="text/javascript"></script>

        <!-- Include a polyfill for ES6 Promises (optional) for IE11, UC Browser and Android browser support SweetAlert -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.js"></script>

        <!-- Library for adding dinamically elements -->
        @*<script src="~/Theme/assets/js/arrive.min.js" type="text/javascript"></script>*@

        <!-- Forms Validations Plugin -->
        <script src="~/Theme/assets/js/jquery.validate.min.js"></script>

        <!--  Plugin for Date Time Picker and Full Calendar Plugin-->
        <script src="~/Theme/assets/js/moment.min.js"></script>

        <!--  Charts Plugin, full documentation here: https://gionkunz.github.io/chartist-js/ -->
        <script src="~/Theme/assets/js/chartist.min.js"></script>

        <!--  Plugin for the Wizard, full documentation here: https://github.com/VinceG/twitter-bootstrap-wizard -->
        <script src="~/Theme/assets/js/jquery.bootstrap-wizard.js"></script>

        <!--  Notifications Plugin, full documentation here: http://bootstrap-notify.remabledesigns.com/    -->
        <script src="~/Theme/assets/js/bootstrap-notify.js"></script>

        <!--  Plugin for the DateTimePicker, full documentation here: https://eonasdan.github.io/bootstrap-datetimepicker/ -->
        <script src="~/Theme/assets/js/bootstrap-datetimepicker.js"></script>

        <!-- Vector Map plugin, full documentation here: http://jvectormap.com/documentation/ -->
        <script src="~/Theme/assets/js/jquery-jvectormap.js"></script>

        <!-- Sliders Plugin, full documentation here: https://refreshless.com/nouislider/ -->
        <script src="~/Theme/assets/js/nouislider.min.js"></script>

        <!--  Google Maps Plugin    -->
        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE"></script>

        <!--  Plugin for Select, full documentation here: http://silviomoreto.github.io/bootstrap-select -->
        <script src="~/Theme/assets/js/jquery.select-bootstrap.js"></script>

        <!--  DataTables.net Plugin, full documentation here: https://datatables.net/    -->
        <script src="~/Theme/assets/js/jquery.datatables.js"></script>

        <script src="~/Theme/assets/js/jquery.spinner.js"></script>

        <!-- Sweet Alert 2 plugin, full documentation here: https://limonte.github.io/sweetalert2/ -->
        <script src="~/Theme/assets/js/sweetalert2.js"></script>

        <!-- Plugin for Fileupload, full documentation here: http://www.jasny.net/bootstrap/javascript/#fileinput -->
        <script src="~/Theme/assets/js/jasny-bootstrap.min.js"></script>

        <!--  Full Calendar Plugin, full documentation here: https://github.com/fullcalendar/fullcalendar    -->
        <script src="~/Theme/assets/js/fullcalendar.min.js"></script>

        <!-- Plugin for Tags, full documentation here: https://github.com/bootstrap-tagsinput/bootstrap-tagsinputs  -->
        <script src="~/Theme/assets/js/jquery.tagsinput.js"></script>

        <!-- Material Dashboard javascript methods -->
        <script src="~/Theme/assets/js/material-dashboard.js?v=1.2.1"></script>
        <!-- Material Dashboard DEMO methods, don't include it in your project! -->
        <script src="~/Theme/assets/js/demo.js"></script>

        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

        <script type="text/javascript">

            function fnReset() {

                $("#RegisterValidation").get(0).reset();
                $("#RegId").val("");
            }

            jQuery.fn.ForceNumericOnly = function () {
                return this.each(function () {
                    $(this).keydown(function (e) {
                        var key = e.charCode || e.keyCode || 0;
                        // allow backspace, tab, delete, enter, arrows, numbers and keypad numbers ONLY
                        // home, end, period, and numpad decimal
                        return (
                            key == 8 ||
                            key == 9 ||
                            key == 13 ||
                            key == 46 ||
                            key == 110 ||
                            key == 190 ||
                            (key >= 35 && key <= 40) ||
                            (key >= 48 && key <= 57) ||
                            (key >= 96 && key <= 105));
                    });
                });
            };

            $(document).ready(function () {

                //setTimeout(function () {
                //    var autofilled = document.querySelectorAll('input#password:-webkit-autofill');
                //    if (autofilled) {
                //        $("input[type=password]").parent().addClass("is-dirty");
                //    }
                //}, 500);

                //md.initSliders();
                demo.initFormExtendedDatetimepickers();

                //$('.datetimepicker').datetimepicker({
                //    icons: {
                //        time: "fa fa-clock-o",
                //        date: "fa fa-calendar",
                //        up: "fa fa-chevron-up",
                //        down: "fa fa-chevron-down",
                //        previous: 'fa fa-chevron-left',
                //        next: 'fa fa-chevron-right',
                //        today: 'fa fa-screenshot',
                //        clear: 'fa fa-trash',
                //        close: 'fa fa-remove'
                //    }
                //});

                $("[data-val-required]").each(function () {
                    var label = $('label[for="' + $(this).attr("id") + '"]');
                    var asterisksHtml = '<span style="color:red">&nbsp;*</span>';
                    if (label.text().length > 0 && label.html().indexOf(asterisksHtml) === -1) {
                        label.append(asterisksHtml);
                    }
                });

                $('#datatables').DataTable({

                    processing: true,
                    serverSide: true,

                    "pagingType": "full_numbers",
                    "lengthMenu": [
                        [10, 25, 50, -1],
                        [10, 25, 50, "All"]
                    ],
                    ajax:
                        {
                            url: "/Manage/Home/LoadData",
                            type: "POST",
                            datatype: "json"

                        },
                    columns: [
                        { data: "Name", autowidth: true, bSortable: true, bOrderable: true },
                        { data: "Email", autowidth: true, bSortable: true, bOrderable: true },
                        {
                            data: "DOB", autowidth: true, bSortable: true, bOrderable: true,
                            render: function (d) {
                                return moment(d).format("DD/MM/YYYY");
                            },
                        },
                        { data: "Mobile", autowidth: true, bSortable: true, bOrderable: true },

                        {
                            data: "RegId",
                            render: function (data, type, full, meta) {

                                var inner = '<div class="td-actions text-center">' +
                                               '<a class="btn btn-success edit"><i class="material-icons">edit</i></a>' +
                                               '<a class="btn btn-danger btn-icon remove" onclick="demo.showSwal(&#39;warning-message-and-confirmation&#39;)" style="margin-left: 3px"><i class="material-icons">close</i></a>' +
                                               '</div>'
                                return inner;
                            },
                        }],

                    responsive: true,
                    language: {
                        search: "",
                        searchPlaceholder: "Search records",
                        sProcessing: '<span id="js-one" data-spinner="{&quot;radius&quot;: 25}"></span>'
                    }

                });


                var table = $('#datatables').DataTable();

                // Edit record
                table.on('click', '.edit', function () {

                    $('#myModal').modal('show');
                    var row = table.row($(this).closest('tr')).data();

                    //$.material.options.autofill = true;
                    //$.material.init();

                    $("#RegId").val(row.RegId);
                    $("#Name").focus().val(row.Name);
                    $("#Email").val(row.Email);
                    $("#DOB").val(moment(row.DOB).format("DD/MM/YYYY"));
                    $("#MobileNo").val(row.Mobile);
                    $("#Password").val(row.Password);
                    $("#ConfirmPassword").val(row.ConfirmPassword);

                    $('div').removeClass('is-empty');

                });

                // Delete a record
                table.on('click', '.remove', function (e) {

                    swal({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonClass: 'btn btn-success',
                        cancelButtonClass: 'btn btn-danger',
                        confirmButtonText: 'Yes, delete it!',
                        buttonsStyling: false
                    }).

                    then(function () {

                        $tr = $(this).closest('tr');
                        table.row($tr).remove().draw();
                        e.preventDefault();

                        swal({
                            title: 'Deleted!',
                            text: 'Your file has been deleted.',
                            type: 'success',
                            confirmButtonClass: "btn btn-success",
                            buttonsStyling: false
                        })
                    }).catch(swal.noop)


                });

                //Like record
                table.on('click', '.like', function () {
                    alert('You clicked on Like button');
                });

                $('.card .material-datatables label').addClass('form-group');

                $("#datatables_length label").addClass("form-group-sm")

            });

        </script>


